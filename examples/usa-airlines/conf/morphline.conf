
morphlines : [
  {
    id : morphline1

    importCommands : ["org.kitesdk.**", "com.stratio.ingestion.morphline.**"]

    commands : [
      {
        readLine {
          charset : UTF-8
        }
      }
      {
        split {
          inputField: message
          outputFields : [Year,Month,DayofMonth,DayOfWeek,DepTime,CRSDepTime,ArrTime,CRSArrTime,UniqueCarrier,FlightNum,TailNum,ActualElapsedTime,CRSElapsedTime,AirTime,ArrDelay,DepDelay,Origin,Dest,Distance,TaxiIn,TaxiOut,Cancelled,CancellationCode,Diverted,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay]
          separator : ","
        }
      }
      {
        if {
          conditions : [
            { equals { Year : Year } }
          ]
          then : [
            { dropRecord {} }
          ]
        }
      }
      {
        java {
          code: """
          String year = (String) record.getFirstValue("Year");
          String month =  org.apache.commons.lang3.StringUtils.leftPad((String) record.getFirstValue("Month"), 2, '0');
          String day =  org.apache.commons.lang3.StringUtils.leftPad((String) record.getFirstValue("DayofMonth"), 2, '0');
          for (String fieldName : new java.util.HashSet<String>(record.getFields().keySet())) {
            String value = (String) record.getFirstValue(fieldName);
            if (value == null) {
              continue;
            }
            if ("NA".equals(value) || "".equals(value)) {
              record.removeAll(fieldName);
              continue;
            }
            //if (fieldName.endsWith("Time") && !fieldName.equals("AirTime")) {
            //  String time = org.apache.commons.lang3.StringUtils.leftPad(value, 4, '0');
            //  //XXX: Skip some incorrect times
            //  if (time.startsWith("24")) {
	    //    return true;
            //  }
            //  record.replaceValues(fieldName, String.format("%s-%s-%sT%s:%s:00", year, month, day, time.substring(0, 2), time.substring(2, 4))); 
            //}
          }
          String depTime = (String) record.getFirstValue("DepTime");
          //if (depTime != null) {
          //  record.replaceValues("@timestamp", depTime);
          //} else {
            record.replaceValues("@timestamp", String.format("%s-%s-%sT00:00:00", year, month, day));
          //}
          return child.process(record);
          """
        }
      }
      {
        addValues {
          _id : "@{Year}@{Month}@{Day}@{FlightNum}"
        }
      }
    ] 
  }
]


