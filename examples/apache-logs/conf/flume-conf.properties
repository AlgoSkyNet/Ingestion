# Name the components on this agent
agent.sources = spoolSource
#agent.sinks = streamingSink cassandraSink elasticSink
agent.sinks = elasticSink
#agent.channels = streamingChannel cassandraChannel elasticChannel
agent.channels = elasticChannel

# Describe/configure the source
agent.sources.spoolSource.type = spoolDir
agent.sources.spoolSource.spoolDir = data/spooldir

# Mapping for multiplexing selector
#agent.sources.spoolSource.selector.type = multiplexing
#agent.sources.spoolSource.selector.header = log_http_code
#agent.sources.spoolSource.selector.mapping.404 = streamingChannel cassandraChannel elasticChannel
#agent.sources.spoolSource.selector.mapping.default = cassandraChannel elasticChannel

# Define the interceptors
agent.sources.spoolSource.interceptors = morphlineinterceptor
agent.sources.spoolSource.interceptors.morphlineinterceptor.type = org.apache.flume.sink.solr.morphline.MorphlineInterceptor$Builder
agent.sources.spoolSource.interceptors.morphlineinterceptor.morphlineFile = conf/interceptor.conf
agent.sources.spoolSource.interceptors.morphlineinterceptor.morphlineId = morphline1

# Describe the sinks
#agent.sinks.streamingSink.type=com.stratio.flume.sink.streaming.StratioStreamingSink
#agent.sinks.streamingSink.kafkaHost=172.19.0.212
#agent.sinks.streamingSink.kafkaPort=9092
#agent.sinks.streamingSink.zookeeperHost=172.19.0.212
#agent.sinks.streamingSink.zookeeperPort=2181
#agent.sinks.streamingSink.streamName=testStream
#agent.sinks.streamingSink.streamFields=log_id,log_host,log_user,log_date,log_http_method,log_url_path,log_http_version,log_http_code,log_bytes_returned

#agent.sinks.cassandraSink.keyspace = test
#agent.sinks.cassandraSink.cluster-name = testCluster
#agent.sinks.cassandraSink.type = com.stratio.streaming.sink.cassandra.CassandraSink
#agent.sinks.cassandraSink.host = localhost
#agent.sinks.cassandraSink.table = access_logs
#agent.sinks.cassandraSink.primaryKey = log_id
#agent.sinks.cassandraSink.batchSize = 200
#agent.sinks.cassandraSink.port = 9042
#agent.sinks.cassandraSink.definitionFile = /opt/flume/conf/definition_access_log.json
#agent.sinks.cassandraSink.consistency = QUORUM
#agent.sinks.cassandraSink.keyspaceStatement = CREATE KEYSPACE IF NOT EXISTS test WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };
#agent.sinks.cassandraSink.tableStatement = CREATE TABLE if not exists test.access_logs (data text, log_id uuid, log_bytes_returned text, log_date timestamp, log_host text, log_http_code int, log_http_method text, log_http_version text, log_url_path text, log_user text, PRIMARY KEY (log_id));

agent.sinks.elasticSink.type = org.apache.flume.sink.elasticsearch.ElasticSearchSink
agent.sinks.elasticSink.batchSize=1000
agent.sinks.elasticSink.indexName=apache_logs
agent.sinks.elasticSink.hostNames=127.0.0.1:9300
agent.sinks.elasticSink.clusterName=ter
agent.sinks.elasticSink.serializer=com.stratio.ingestion.serializer.elasticsearch.ElasticSearchSerializerWithMapping
agent.sinks.snk.serializer.mappingFile=conf/elasticsearch_mapping.json


# Channels
#agent.channels.streamingChannel.type = file
#agent.channels.streamingChannel.checkpointDir = /opt/flume/channel1/check/
#agent.channels.streamingChannel.dataDirs = /opt/flume/channel1/data/
#agent.channels.streamingChannel.transactionCapacity = 10000

#agent.channels.cassandraChannel.type = file
#agent.channels.cassandraChannel.checkpointDir = /opt/flume/channel2/check/
#agent.channels.cassandraChannel.dataDirs = /opt/flume/channel2/data/
#agent.channels.cassandraChannel.transactionCapacity = 10000

agent.channels.elasticChannel.type = file
agent.channels.elasticChannel.checkpointDir = data//flume/channel3/check/
agent.channels.elasticChannel.dataDirs = data/flume/channel3/data/
agent.channels.elasticChannel.transactionCapacity = 10000

# Bind the source and sinks to the channel
#agent.sources.spoolSource.channels = streamingChannel cassandraChannel elasticChannel
agent.sources.spoolSource.channels =  elasticChannel
#agent.sinks.streamingSink.channel = streamingChannel
#agent.sinks.cassandraSink.channel = cassandraChannel
agent.sinks.elasticSink.channel = elasticChannel
